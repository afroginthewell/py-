
似乎for就是不断调用next
enerator在每次调用next()的时候执行，遇到yield语句返回，再次执行时从上次返回的yield语句处继续执行

def fibonacci():
...   a = b = 1
...   yield a
...   yield b
...   while True:
...     a, b = b, a+b
...     yield b                //在此返回后，再次执行则到while
...
>>> for num in fibonacci():
...   if num > 100: break
...   print num,
